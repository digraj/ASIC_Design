// $Id: $
// File name:   tb_flex_counter.sv
// Created:     1/30/2017
// Author:      Kunwar Digraj Singh Jain
// Lab Section: 5
// Version:     1.0  Initial Design Entry
// Description: Testbench for flex counter

`timescale 1ns / 10ps

module tb_flex_counter () ;

	// Define parameters
	// basic test bench parameters
	localparam	CLK_PERIOD	= 2.5;
	localparam	CHECK_DELAY = 1; // Check 1ns after the rising edge to allow for propagation delay
	
	// Shared Test Variables
	reg tb_clk;

	always
	begin
		tb_clk = 1'b0;
		#(CLK_PERIOD/2.0);
		tb_clk = 1'b1;
		#(CLK_PERIOD/2.0);
	end	

	tb_flex_counter_DUT testbench(.tb_clk);
	
endmodule

module tb_flex_counter_DUT (input wire tb_clk) ;

	reg	tb_n_rst;
	reg	tb_clear;
	reg	tb_count_enable;
	reg	tb_rollover_flag; 
	reg	[3:0] tb_rollover_val; 
	reg	[3:0] tb_count_out ;

	flex_counter DUT
		(
			.clk(tb_clk),
			.n_rst(tb_n_rst),
			.count_enable(tb_count_enable),
			.clear(tb_clear),
			.rollover_val(tb_rollover_val),
			.count_out(tb_count_out),
			.rollover_flag(tb_rollover_flag)
		);	

	int i ;
	initial 
	begin
		//TEST CASE 1
		$display ("-----Test Case 1-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'hf ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b0 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
		$display ("-----Test Case 2-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'b0001 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b0 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
		$display ("-----Test Case 3-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'b1010 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b0 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
		$display ("-----Test Case 4-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'b1110 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
		$display ("-----Test Case 5-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'b0110 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
		$display ("-----Test Case 6-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 4'b0111 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b0 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
/*		$display ("-----Test Case 1-----") ;
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		tb_rollover_val = 8'hff ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b0 ;
		tb_clear = 1'b1 ;
		tb_count_enable = 1'b0 ;
		#5
		@(negedge tb_clk)
		tb_n_rst = 1'b1 ;
		tb_clear = 1'b0 ;
		tb_count_enable = 1'b1 ;
		@(negedge tb_clk);
		for (i = 0; i < 50; i = i + 1)
		begin
			@(negedge tb_clk) ;
		end
*/	end
endmodule	





















